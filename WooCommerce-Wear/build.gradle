plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def versionProperties = loadPropertiesFromFile(file("${rootDir}/version.properties"))

android {
    namespace 'com.woocommerce.wear'
    compileSdk gradle.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.woocommerce.wear"
        minSdk gradle.ext.minSdkVersion
        targetSdk gradle.ext.targetSdkVersion
        versionName versionProperties.getProperty("wearVersionName")
        versionCode versionProperties.getProperty("wearVersionCode").toInteger()
        vectorDrawables {
            useSupportLibrary true
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion composeCompilerVersion
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation "com.google.android.gms:play-services-wearable:$googlePlayWearableVersion"
    implementation platform("androidx.compose:compose-bom:$composeBOMVersion")
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.wear.compose:compose-material'
    implementation 'androidx.wear.compose:compose-foundation'
    implementation 'androidx.activity:activity-compose'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'androidx.wear.tiles:tiles'
    implementation 'androidx.wear.tiles:tiles-material'
    implementation 'com.google.android.horologist:horologist-compose-tools:0.4.8'
    implementation 'com.google.android.horologist:horologist-tiles:0.4.8'
    implementation 'androidx.wear.watchface:watchface-complications-data-source-ktx'
    androidTestImplementation platform("androidx.compose:compose-bom:$composeBOMVersion")
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}

static def loadPropertiesFromFile(inputFile) {
    def properties = new Properties()
    inputFile.withInputStream { stream ->
        properties.load(stream)
    }
    return properties
}
